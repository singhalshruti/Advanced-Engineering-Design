/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.mConnect;


import Business.Business;
import Business.Customer.mConnect.Discussion;
import Business.Customer.mConnect.DiscussionThread;
import Business.Customer.mConnect.Group;
import Business.Customer.mConnect.ThreadSplit;


import Business.Enterprise.Enterprise;
import Business.Language;
import Business.Organization.Organization;


import Business.UserAccount.UserAccount;
import Business.WorkQueue.GroupRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.BorderLayout;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;


public class ManagemConnectJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    Enterprise enterprise;
    Business business;
    private UserAccount userAccount;
    private Organization organization;

    ArrayList<Group> groupList;
    private SimpleDateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");

    /**
     * Creates new form ManageOrdersJPanel
     */
    public ManagemConnectJPanel(JPanel userProcessContainer, UserAccount userAccount, Organization organization, Enterprise enterprise, Business business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.organization = organization;
        this.business = business;
        this.enterprise = enterprise;
        groupList = new ArrayList<Group>();

        loadScreen();
        populateMyGroups();
        populateGroupsCombo();
        populateThreadsCombo();
        populateOtherGroups();
        populateGroupRequest();
        populateTree();
        populateThreadsTable();
        globalGroupAnalysis();
    }

    private void loadScreen() {
        
    }

    private void populateThreadsCombo() {
        cmbThreads.removeAllItems();
        if (cmbGroups.getItemCount() > 0) {
            for (DiscussionThread t : ((Group) cmbGroups.getSelectedItem()).getDiscussionThread()) {
                cmbThreads.addItem(t);
            }
        }
    }

    private void populateGroupsCombo() {
        cmbGroups.removeAllItems();
        cmbGroups1.removeAllItems();
        for (Group g : groupList) {
            cmbGroups.addItem(g);
            cmbGroups1.addItem(g);
        }
    }

    private void populateMyGroups() {
        groupList = new ArrayList<Group>();
        for (Group g : business.getGroupCatalog().getGroupList()) {
            for (UserAccount ua : g.getGroupUsers()) {
                if (ua == userAccount) {
                    groupList.add(g);
                    break;
                }
            }
        }
    }

    public void populateTree() {
        DefaultTreeModel dtm = (DefaultTreeModel) treeGroups.getModel();
        Group group;

        DefaultMutableTreeNode root = (DefaultMutableTreeNode) dtm.getRoot();

        for (int i = 0; i < groupList.size(); i++) {
            group = groupList.get(i);
            if (!root.isLeaf()) {
                root.remove(i);
            }
        }

        DefaultMutableTreeNode networkNode;
        for (int i = 0; i < groupList.size(); i++) {
            group = groupList.get(i);
            networkNode = new DefaultMutableTreeNode(group);
            root.insert(networkNode, i);
        }
        dtm.reload();
    }

//    /**
//     * This method is called from within the constructor to initialize the form.
//     * WARNING: Do NOT modify this code. The content of this method is always
//     * regenerated by the Form Editor.
//     */
//    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        MasterTab = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        optOpen = new javax.swing.JRadioButton();
        lblGroupName = new javax.swing.JLabel();
        txtGroupName = new javax.swing.JTextField();
        btnAddGroup = new javax.swing.JButton();
        lblGroupType = new javax.swing.JLabel();
        optClosed = new javax.swing.JRadioButton();
        lblQuantity = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblGroup = new javax.swing.JTable();
        btnAnalyze = new javax.swing.JButton();
        lblSeatch = new javax.swing.JLabel();
        jXSearchField1 = new org.jdesktop.swingx.JXSearchField();
        btnJoinGroup = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        lblSeatch1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblRequests = new javax.swing.JTable();
        btnApprove = new javax.swing.JButton();
        btnReject = new javax.swing.JButton();
        jPanelDashboard = new javax.swing.JPanel();
        jSplitPane2 = new javax.swing.JSplitPane();
        jPanel7 = new javax.swing.JPanel();
        lblQuantity1 = new javax.swing.JLabel();
        fromDate = new org.jdesktop.swingx.JXDatePicker();
        toDate = new org.jdesktop.swingx.JXDatePicker();
        lblQuantity2 = new javax.swing.JLabel();
        lblQuantity3 = new javax.swing.JLabel();
        btnSettings = new javax.swing.JButton();
        jGraph = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        treeGroups = new javax.swing.JTree();
        jPanel1 = new javax.swing.JPanel();
        JTDiscussions = new javax.swing.JTabbedPane();
        jPanel10 = new javax.swing.JPanel();
        lblGroupName3 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        taThreadTopic = new javax.swing.JTextArea();
        btnAddThread = new javax.swing.JButton();
        lblCategory5 = new javax.swing.JLabel();
        cmbGroups1 = new javax.swing.JComboBox();
        jScrollPane10 = new javax.swing.JScrollPane();
        tblThreads = new javax.swing.JTable();
        lblSearchThread = new javax.swing.JLabel();
        jxThreadSearch = new org.jdesktop.swingx.JXSearchField();
        btnViewDiscussions = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tblDiscussion = new javax.swing.JTable();
        lblCategory6 = new javax.swing.JLabel();
        cmbThreads = new javax.swing.JComboBox();
        lblGroupName4 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        taComments = new javax.swing.JTextArea();
        btnComments = new javax.swing.JButton();
        btnDisagree = new javax.swing.JButton();
        btnAgree = new javax.swing.JButton();
        cmbGroups = new javax.swing.JComboBox();
        lblCategory3 = new javax.swing.JLabel();
        btnAnalyze1 = new javax.swing.JButton();
        lblAddDrug = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        MasterTab.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jSplitPane1.setBackground(new java.awt.Color(255, 255, 255));
        jSplitPane1.setBorder(null);
        jSplitPane1.setDividerLocation(125);
        jSplitPane1.setDividerSize(0);
        jSplitPane1.setToolTipText("");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPane1.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N

        optOpen.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(optOpen);
        optOpen.setText("Open");
        optOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optOpenActionPerformed(evt);
            }
        });

        lblGroupName.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lblGroupName.setText("Group Name ");

        txtGroupName.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        txtGroupName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGroupNameActionPerformed(evt);
            }
        });

        btnAddGroup.setBackground(new java.awt.Color(255, 255, 255));
        btnAddGroup.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnAddGroup.setText("Add");
        btnAddGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddGroupActionPerformed(evt);
            }
        });

        lblGroupType.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lblGroupType.setText("Group Type");

        optClosed.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(optClosed);
        optClosed.setSelected(true);
        optClosed.setText("Closed");
        optClosed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optClosedActionPerformed(evt);
            }
        });

        lblQuantity.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lblQuantity.setText("Add New Group");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAddGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblQuantity)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(lblGroupName)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtGroupName, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(lblGroupType)
                            .addGap(18, 18, 18)
                            .addComponent(optClosed)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(optOpen))))
                .addContainerGap(593, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblQuantity)
                .addGap(13, 13, 13)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGroupName)
                    .addComponent(txtGroupName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGroupType)
                    .addComponent(optClosed)
                    .addComponent(optOpen))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAddGroup)
                .addContainerGap(437, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Add New Group", jPanel3);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        tblGroup.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        tblGroup.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Group Name", "Created By", "Created Date", "Group Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblGroup.setSelectionBackground(new java.awt.Color(204, 204, 204));
        tblGroup.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane2.setViewportView(tblGroup);
        if (tblGroup.getColumnModel().getColumnCount() > 0) {
            tblGroup.getColumnModel().getColumn(3).setHeaderValue("Group Type");
        }

        btnAnalyze.setBackground(new java.awt.Color(255, 255, 255));
        btnAnalyze.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnAnalyze.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/mConnect/3d7.png"))); // NOI18N
        btnAnalyze.setToolTipText("Click here to view the discussion pattern");
        btnAnalyze.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        btnAnalyze.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnAnalyze.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        btnAnalyze.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalyzeActionPerformed(evt);
            }
        });

        lblSeatch.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lblSeatch.setText("Search Group");

        jXSearchField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXSearchField1ActionPerformed(evt);
            }
        });

        btnJoinGroup.setBackground(new java.awt.Color(255, 255, 255));
        btnJoinGroup.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnJoinGroup.setText("Join");
        btnJoinGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJoinGroupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAnalyze)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnJoinGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(lblSeatch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jXSearchField1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 966, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSeatch)
                    .addComponent(jXSearchField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnJoinGroup)
                    .addComponent(btnAnalyze))
                .addGap(68, 68, 68))
        );

        jTabbedPane1.addTab("Join Group", jPanel5);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        lblSeatch1.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lblSeatch1.setText("Requests to join your groups");

        tblRequests.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        tblRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "For Group", "Requested By", "Requested Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblRequests.setSelectionBackground(new java.awt.Color(204, 204, 204));
        tblRequests.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane3.setViewportView(tblRequests);

        btnApprove.setBackground(new java.awt.Color(255, 255, 255));
        btnApprove.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnApprove.setText("Approve");
        btnApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApproveActionPerformed(evt);
            }
        });

        btnReject.setBackground(new java.awt.Color(255, 255, 255));
        btnReject.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnReject.setText("Reject");
        btnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnReject, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnApprove, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(lblSeatch1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 966, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSeatch1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnApprove)
                    .addComponent(btnReject))
                .addContainerGap(293, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Requests", jPanel6);

        jPanelDashboard.setBackground(new java.awt.Color(255, 255, 255));

        jSplitPane2.setDividerLocation(70);
        jSplitPane2.setDividerSize(0);
        jSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        lblQuantity1.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lblQuantity1.setText("Global Discussion Pattern");

        fromDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromDateActionPerformed(evt);
            }
        });

        toDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toDateActionPerformed(evt);
            }
        });

        lblQuantity2.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lblQuantity2.setText("To ");

        lblQuantity3.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lblQuantity3.setText("From");

        btnSettings.setBackground(new java.awt.Color(255, 255, 255));
        btnSettings.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnSettings.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/mConnect/loading1.png"))); // NOI18N
        btnSettings.setToolTipText("Reset Date");
        btnSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSettingsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblQuantity1)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(lblQuantity3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fromDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblQuantity2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(toDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSettings, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(634, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblQuantity1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(fromDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(toDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblQuantity2)
                        .addComponent(lblQuantity3))
                    .addComponent(btnSettings, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jSplitPane2.setTopComponent(jPanel7);

        jGraph.setBackground(new java.awt.Color(255, 255, 255));
        jGraph.setLayout(new java.awt.BorderLayout());
        jSplitPane2.setRightComponent(jGraph);

        javax.swing.GroupLayout jPanelDashboardLayout = new javax.swing.GroupLayout(jPanelDashboard);
        jPanelDashboard.setLayout(jPanelDashboardLayout);
        jPanelDashboardLayout.setHorizontalGroup(
            jPanelDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDashboardLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane2)
                .addContainerGap())
        );
        jPanelDashboardLayout.setVerticalGroup(
            jPanelDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDashboardLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 540, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Dashboard", jPanelDashboard);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jSplitPane1.setRightComponent(jPanel2);

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(null);
        jScrollPane1.setMinimumSize(new java.awt.Dimension(200, 490));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(200, 490));

        treeGroups.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("My Groups");
        treeGroups.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        treeGroups.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                treeGroupsPropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(treeGroups);

        jSplitPane1.setLeftComponent(jScrollPane1);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        MasterTab.addTab("My Groups", jPanel4);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N

        JTDiscussions.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        JTDiscussions.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));

        lblGroupName3.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lblGroupName3.setText("Thread Name");

        taThreadTopic.setColumns(20);
        taThreadTopic.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        taThreadTopic.setRows(5);
        jScrollPane7.setViewportView(taThreadTopic);

        btnAddThread.setBackground(new java.awt.Color(255, 255, 255));
        btnAddThread.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnAddThread.setText("Add Thread");
        btnAddThread.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddThreadActionPerformed(evt);
            }
        });

        lblCategory5.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lblCategory5.setText("Group Name");

        cmbGroups1.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        cmbGroups1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Infectious & Parasitic", "Mental Disorder", "Nervous System", "Pregnancy, Child Birth, & Puerperium", "Congenital Anomalies", " " }));
        cmbGroups1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbGroups1(evt);
            }
        });

        tblThreads.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        tblThreads.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Group Name", "Thread Name", "Created By", "Created Date", "# Comments"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblThreads.setSelectionBackground(new java.awt.Color(204, 204, 204));
        tblThreads.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane10.setViewportView(tblThreads);

        lblSearchThread.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lblSearchThread.setText("Search Thread");

        jxThreadSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jxThreadSearchActionPerformed(evt);
            }
        });

        btnViewDiscussions.setBackground(new java.awt.Color(255, 255, 255));
        btnViewDiscussions.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnViewDiscussions.setText("View Discussions");
        btnViewDiscussions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDiscussionsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnViewDiscussions))
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1157, Short.MAX_VALUE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCategory5)
                                    .addComponent(lblGroupName3))
                                .addGap(49, 49, 49)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnAddThread, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(cmbGroups1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(lblSearchThread)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jxThreadSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCategory5)
                    .addComponent(cmbGroups1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblGroupName3)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAddThread)
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jxThreadSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSearchThread))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(94, 94, 94)
                .addComponent(btnViewDiscussions)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        JTDiscussions.addTab("Add New Thread", jPanel10);

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));

        tblDiscussion.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        tblDiscussion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Comments", "Created By", "Created Date", "Agree", "Disagree"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDiscussion.setSelectionBackground(new java.awt.Color(204, 204, 204));
        tblDiscussion.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane8.setViewportView(tblDiscussion);
        if (tblDiscussion.getColumnModel().getColumnCount() > 0) {
            tblDiscussion.getColumnModel().getColumn(4).setHeaderValue("Disagree");
        }

        lblCategory6.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lblCategory6.setText("Thread Name");

        cmbThreads.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        cmbThreads.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Infectious & Parasitic", "Mental Disorder", "Nervous System", "Pregnancy, Child Birth, & Puerperium", "Congenital Anomalies", " " }));
        cmbThreads.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbThreads(evt);
            }
        });

        lblGroupName4.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lblGroupName4.setText("Comments");

        taComments.setColumns(20);
        taComments.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        taComments.setRows(5);
        jScrollPane9.setViewportView(taComments);

        btnComments.setBackground(new java.awt.Color(255, 255, 255));
        btnComments.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnComments.setText("Add Comments");
        btnComments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCommentsActionPerformed(evt);
            }
        });

        btnDisagree.setBackground(new java.awt.Color(255, 255, 255));
        btnDisagree.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnDisagree.setText("Disagree");
        btnDisagree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisagreeActionPerformed(evt);
            }
        });

        btnAgree.setBackground(new java.awt.Color(255, 255, 255));
        btnAgree.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnAgree.setText("Agree");
        btnAgree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgreeActionPerformed(evt);
            }
        });

        cmbGroups.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        cmbGroups.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Infectious & Parasitic", "Mental Disorder", "Nervous System", "Pregnancy, Child Birth, & Puerperium", "Congenital Anomalies", " " }));
        cmbGroups.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbGroups(evt);
            }
        });

        lblCategory3.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lblCategory3.setText("Group Name");

        btnAnalyze1.setBackground(new java.awt.Color(255, 255, 255));
        btnAnalyze1.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnAnalyze1.setToolTipText("Click here to view the discussion pattern");
        btnAnalyze1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        btnAnalyze1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnAnalyze1.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        btnAnalyze1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalyze1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 1145, Short.MAX_VALUE)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCategory3)
                                    .addComponent(lblCategory6))
                                .addGap(22, 22, 22))
                            .addComponent(lblGroupName4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbThreads, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbGroups, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnComments, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAnalyze1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAgree, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDisagree)))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCategory3)
                    .addComponent(cmbGroups, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAnalyze1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbThreads, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCategory6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGroupName4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnComments)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDisagree)
                    .addComponent(btnAgree))
                .addGap(49, 49, 49))
        );

        JTDiscussions.addTab("Discussion Board", jPanel11);

        JTDiscussions.setSelectedIndex(1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(JTDiscussions)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JTDiscussions)
                .addContainerGap())
        );

        MasterTab.addTab("Discussion Threads", jPanel1);

        MasterTab.setSelectedIndex(1);

        lblAddDrug.setFont(new java.awt.Font("Calibri", 2, 24)); // NOI18N
        lblAddDrug.setText("mConnect");
        lblAddDrug.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MasterTab)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblAddDrug, javax.swing.GroupLayout.PREFERRED_SIZE, 996, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(lblAddDrug)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MasterTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbGroups(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbGroups
        // TODO add your handling code here:
        populateThreadsCombo();
    }//GEN-LAST:event_cmbGroups

    private void populateDiscussionTable() {
        try {
            DefaultTableModel model = (DefaultTableModel) tblDiscussion.getModel();
            model.setRowCount(0);

            for (Discussion d : ((DiscussionThread) cmbThreads.getSelectedItem()).getDiscussion()) {

                Object[] row = new Object[5];
                row[0] = d;
                row[1] = ((UserAccount) d.getAddedBy()).getEmployee();
                row[2] = dateFormat.format(d.getAddedOn());
                row[3] = d.getAgreeCounter();
                row[4] = d.getDisagreeCounter();
                model.addRow(row);

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Unable to load discussions.");
        }
    }

    private void populateThreadsTable() {
        try {
            DefaultTableModel model = (DefaultTableModel) tblThreads.getModel();
            model.setRowCount(0);
            if (!groupList.isEmpty()) {
                for (Group g : groupList) {
                    for (DiscussionThread d : g.getDiscussionThread()) {
                        if (jxThreadSearch.getText().isEmpty() || d.getTopic().toLowerCase().contains(jxThreadSearch.getText().trim().toLowerCase())) {
                            Object[] row = new Object[5];
                            row[0] = g;
                            row[1] = d;
                            row[2] = ((UserAccount) d.getCreatedBy()).getEmployee();
                            row[3] = dateFormat.format(d.getCreatedDate());
                            row[4] = d.getResponseCounter();
                            model.addRow(row);
                        }
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Unable to load discussions.");
        }
    }

    private void populateGroupRequest() {
        try {
            DefaultTableModel model = (DefaultTableModel) tblRequests.getModel();
            model.setRowCount(0);
            for (WorkRequest wr : userAccount.getWorkQueue().getWorkRequestList()) {
                if (wr instanceof GroupRequest) {
                    Object[] row = new Object[3];
                    row[0] = wr;
                    row[1] = wr.getSender().getUsername();
                    row[2] = wr.getRequestDate();
                    model.addRow(row);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Unable to load requests.");
        }
    }

    private void populateOtherGroups() {
        try {
            DefaultTableModel model = (DefaultTableModel) tblGroup.getModel();
            model.setRowCount(0);
            for (Group g : business.getGroupCatalog().getGroupList()) {
                if (!(g.getGroupUsers().contains(userAccount))) {
                    if (((jXSearchField1.getText().trim().isEmpty())) || g.getGroupName().toLowerCase().contains(jXSearchField1.getText().trim().toLowerCase())) {
                        Object[] row = new Object[4];
                        row[0] = g;
                        row[1] = g.getGroupAdmin().getEmployee();
                        row[2] = g.getCreatedDate();
                        row[3] = ((g.isIsOpen()) ? "Public" : "Private");
                        model.addRow(row);
                    }
                } else {
                    continue;
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Unable to load discussions.");
        }
    }

    private void cmbThreads(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbThreads
        // TODO add your handling code here:
        if (cmbThreads.getItemCount() > 0) {
            populateDiscussionTable();
        }
    }//GEN-LAST:event_cmbThreads

    private void treeGroupsPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_treeGroupsPropertyChange
        // TODO add your handling code here:

    }//GEN-LAST:event_treeGroupsPropertyChange

    private void btnCommentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCommentsActionPerformed
        // TODO add your handling code here:
        if (cmbGroups.getItemCount() > 0) {
            if ((cmbThreads.getItemCount() > 0) && (!taComments.getText().trim().isEmpty())) {

                DiscussionThread thread = (DiscussionThread) cmbThreads.getSelectedItem();
                Discussion comments = thread.addComments();
                ((Group) cmbGroups.getSelectedItem()).incrementNotificationCounter();
                comments.setAddedBy(userAccount);
                comments.setComments(taComments.getText().trim());

                populateDiscussionTable();
                populateThreadsTable();
                taComments.setText("");
            } else {
                JOptionPane.showMessageDialog(null, "Please specify valid details.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select the group a valid group.");
        }

    }//GEN-LAST:event_btnCommentsActionPerformed

    private void btnDisagreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisagreeActionPerformed
        // TODO add your handling code here:
        try {
            int selectedRow = tblDiscussion.getSelectedRow();
            if (selectedRow >= 0) {
                int dialogResult = JOptionPane.showConfirmDialog(null, "Are you sure you want to disagree with the selected comment?", "Warning", JOptionPane.YES_NO_OPTION);
                if (dialogResult == JOptionPane.YES_OPTION) {
                    Discussion d = (Discussion) tblDiscussion.getValueAt(selectedRow, 0);
                    if (!d.incrementDisagreeCounter(userAccount)) {
                        JOptionPane.showMessageDialog(null, "The requested action could not be performed as you have already acknowledged this comment");
                        return;
                    }
                    populateDiscussionTable();
                }
            } else {
                JOptionPane.showMessageDialog(null, Language.selectEntry);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Language.fail);
        }
    }//GEN-LAST:event_btnDisagreeActionPerformed

    private void btnAgreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgreeActionPerformed
        // TODO add your handling code here:
        try {
            int selectedRow = tblDiscussion.getSelectedRow();
            if (selectedRow >= 0) {
                int dialogResult = JOptionPane.showConfirmDialog(null, "Are you sure you want to agree with the selected comment?", "Warning", JOptionPane.YES_NO_OPTION);
                if (dialogResult == JOptionPane.YES_OPTION) {
                    Discussion d = (Discussion) tblDiscussion.getValueAt(selectedRow, 0);
                    if (!d.incrementAggreeCounter(userAccount)) {
                        JOptionPane.showMessageDialog(null, "The requested action could not be performed as you have already acknowledged this comment");
                        return;
                    }
                    populateDiscussionTable();
                }
            } else {
                JOptionPane.showMessageDialog(null, Language.selectEntry);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Language.fail);
        }
    }//GEN-LAST:event_btnAgreeActionPerformed


    private void btnAddThreadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddThreadActionPerformed
        // TODO add your handling code here: 
        if (cmbGroups1.getItemCount() > 0) {
            if ((!taThreadTopic.getText().trim().isEmpty()) && (!taThreadTopic.getText().trim().isEmpty())) {
                Group group = (Group) cmbGroups1.getSelectedItem();
                DiscussionThread thread = group.addThread();
                group.incrementNotificationCounter();
                thread.setCreatedBy(userAccount);
                thread.setThreadName(taThreadTopic.getText().trim());
                thread.setTopic(taThreadTopic.getText().trim());
                Collections.sort(group.getDiscussionThread());
                populateThreadsCombo();
                populateThreadsTable();
                taThreadTopic.setText("");
                JOptionPane.showMessageDialog(null, "Discussion Thread created successfully.");
            } else {
                JOptionPane.showMessageDialog(null, "Please specify valid details.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select the group a valid group.");
        }
    }//GEN-LAST:event_btnAddThreadActionPerformed

    private void cmbGroups1(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbGroups1
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cmbGroups1

    private void jxThreadSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jxThreadSearchActionPerformed
        // TODO add your handling code here:
        populateThreadsTable();
    }//GEN-LAST:event_jxThreadSearchActionPerformed

    private void btnViewDiscussionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDiscussionsActionPerformed
        // TODO add your handling code here:
        try {
            int selectedRow = tblThreads.getSelectedRow();
            if (selectedRow >= 0) {
                DiscussionThread d = (DiscussionThread) tblThreads.getValueAt(selectedRow, 1);
                cmbThreads.setSelectedItem(d);
                JTDiscussions.setSelectedIndex(1);
            } else {
                JOptionPane.showMessageDialog(null, Language.selectEntry);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Language.fail);
        }
    }//GEN-LAST:event_btnViewDiscussionsActionPerformed

    private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectActionPerformed
        // TODO add your handling code here:
        try {
            int selectedRow = tblRequests.getSelectedRow();
            if (selectedRow >= 0) {
                int dialogResult = JOptionPane.showConfirmDialog(null, "Are you sure you want to reject?", "Warning", JOptionPane.YES_NO_OPTION);
                if (dialogResult == JOptionPane.YES_OPTION) {
                    GroupRequest gr = (GroupRequest) tblRequests.getValueAt(selectedRow, 0);
                    userAccount.getWorkQueue().getWorkRequestList().remove(gr);
                    populateGroupRequest();
                }
            } else {
                JOptionPane.showMessageDialog(null, Language.selectEntry);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Language.fail);
        }
    }//GEN-LAST:event_btnRejectActionPerformed

    private void btnApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApproveActionPerformed
        // TODO add your handling code here:
        try {
            int selectedRow = tblRequests.getSelectedRow();
            if (selectedRow >= 0) {
                int dialogResult = JOptionPane.showConfirmDialog(null, "Are you sure you want to approve?", "Warning", JOptionPane.YES_NO_OPTION);
                if (dialogResult == JOptionPane.YES_OPTION) {
                    GroupRequest gr = (GroupRequest) tblRequests.getValueAt(selectedRow, 0);
                    gr.getGroup().getGroupUsers().add(gr.getSender());
                    userAccount.getWorkQueue().getWorkRequestList().remove(gr);
                    populateGroupRequest();

                }
            } else {
                JOptionPane.showMessageDialog(null, Language.selectEntry);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Language.fail);
        }
    }//GEN-LAST:event_btnApproveActionPerformed

    private void btnJoinGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJoinGroupActionPerformed
        // TODO add your handling code here:
        try {
            int selectedRow = tblGroup.getSelectedRow();
            if (selectedRow >= 0) {
                int dialogResult = JOptionPane.showConfirmDialog(null, "Are you sure you want to join this group?", "Warning", JOptionPane.YES_NO_OPTION);
                if (dialogResult == JOptionPane.YES_OPTION) {

                    Group g = (Group) tblGroup.getValueAt(selectedRow, 0);
                    if (g.isIsOpen()) {
                        g.getGroupUsers().add(userAccount);
                        JOptionPane.showMessageDialog(null, "You were added to the selected group.");
                        populateOtherGroups();
                        populateMyGroups();
                        populateGroupsCombo();
                        populateTree();
                    } else {
                        UserAccount ua = g.getGroupAdmin();
                        GroupRequest gr = new GroupRequest();
                        gr.setGroup(g);
                        gr.setSender(userAccount);
                        ua.getWorkQueue().getWorkRequestList().add(gr);
                        JOptionPane.showMessageDialog(null, "Your request has been sent to the group admin.");
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, Language.selectEntry);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Language.fail);
        }
    }//GEN-LAST:event_btnJoinGroupActionPerformed

    private void jXSearchField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXSearchField1ActionPerformed
        // TODO add your handling code here:
        populateOtherGroups();
    }//GEN-LAST:event_jXSearchField1ActionPerformed

    private void optClosedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optClosedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_optClosedActionPerformed

    private void btnAddGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddGroupActionPerformed
        if (!txtGroupName.getText().isEmpty()) {

            Group group = business.getGroupCatalog().addGroup();
            group.setGroupAdmin(userAccount);
            group.setGroupName(txtGroupName.getText().trim());
            group.getGroupUsers().add(userAccount);
            if (optOpen.isSelected()) {
                group.setIsOpen(true);
            } else {
                group.setIsOpen(false);
            }
            txtGroupName.setText("");
            Collections.sort(business.getGroupCatalog().getGroupList());
            populateMyGroups();
            populateTree();
            populateGroupsCombo();
            JOptionPane.showMessageDialog(null, "Group created successfully.");
        } else {
            JOptionPane.showMessageDialog(null, "Unable to create group.");
        }
    }//GEN-LAST:event_btnAddGroupActionPerformed

    private void txtGroupNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGroupNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGroupNameActionPerformed

    private void optOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optOpenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_optOpenActionPerformed

    private void btnAnalyzeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnalyzeActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblGroup.getSelectedRow();
        if (selectedRow >= 0) {
            groupAnalysis((Group) tblGroup.getValueAt(selectedRow, 0));
        } else {
            JOptionPane.showMessageDialog(null, "Please select a group from the table");
        }
    }//GEN-LAST:event_btnAnalyzeActionPerformed

    private void groupAnalysis(Group group) {
        ArrayList<ThreadSplit> tc = new ArrayList<>();
        String discussionName;
        boolean found = false;
        for (DiscussionThread dt : (group).getDiscussionThread()) {
            discussionName = dt.getThreadName();
            for (ThreadSplit t : tc) {
                if (t.getThreadName().equals(discussionName)) {
                    t.incrementCounter();
                    found = true;
                }
            }
            if (!found) {
                ThreadSplit ts = new ThreadSplit();
                tc.add(ts);
                ts.setThreadName(discussionName);
                ts.incrementCounter();
            }
            found = false;
        }

        DefaultCategoryDataset ds = new DefaultCategoryDataset();
        for (ThreadSplit t : tc) {
            ds.setValue(new Double(t.getCount()), "Count", t.getThreadName());
        }
        JFreeChart chart = ChartFactory.createBarChart("Discussion Pattern", "Discussion Name", "Thread Count", ds, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot plot = (CategoryPlot) chart.getCategoryPlot();
        BarRenderer barRenderer = (BarRenderer) plot.getRenderer();
        barRenderer.setSeriesPaint(0, new Color(61, 156, 192));
        chart.setBackgroundPaint(Color.WHITE);

        ChartFrame frame = new ChartFrame("Discussion Pattern", chart);
        frame.setVisible(true);
        frame.setSize(450, 500);
    }

    private void btnAnalyze1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnalyze1ActionPerformed
        // TODO add your handling code here:

        if (cmbGroups.getItemCount() > 0) {
            groupAnalysis((Group) cmbGroups.getSelectedItem());
        } else {
            JOptionPane.showMessageDialog(null, "Please select a group from the table");
        }
    }//GEN-LAST:event_btnAnalyze1ActionPerformed

    private void fromDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromDateActionPerformed
        // TODO add your handling code here:
        globalGroupAnalysis();
    }//GEN-LAST:event_fromDateActionPerformed

    private void toDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toDateActionPerformed
        // TODO add your handling code here:
        globalGroupAnalysis();
    }//GEN-LAST:event_toDateActionPerformed

    private void btnSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSettingsActionPerformed
        // TODO add your handling code here:
        fromDate.setDate(null);
        toDate.setDate(null);
        
    }//GEN-LAST:event_btnSettingsActionPerformed

     private void globalGroupAnalysis() {
        ArrayList<ThreadSplit> tc = new ArrayList<>();
        String discussionName;
        boolean found = false;
        for (Group g : business.getGroupCatalog().getGroupList()) {
            for (DiscussionThread dt : g.getDiscussionThread()) {
                if (((fromDate.getDate() == null) || (dt.getCreatedDate().after(fromDate.getDate())))
                        && ((toDate.getDate() == null) || (dt.getCreatedDate().before(toDate.getDate())))) {
                    discussionName = dt.getThreadName();
                    for (ThreadSplit t : tc) {
                        if (t.getThreadName().equals(discussionName)) {
                            t.incrementCounter();
                            found = true;
                        }
                    }
                    if (!found) {
                        ThreadSplit ts = new ThreadSplit();
                        tc.add(ts);
                        ts.setThreadName(discussionName);
                        ts.incrementCounter();
                    }
                    found = false;
                }
            }
        }
        DefaultCategoryDataset ds = new DefaultCategoryDataset();
        for (ThreadSplit t : tc) {
            ds.setValue(new Double(t.getCount()), "Count", t.getThreadName());
        }
        JFreeChart chart = ChartFactory.createBarChart("Global Discussion Pattern", "Discussion Name", "Thread Count", ds, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot plot = (CategoryPlot) chart.getCategoryPlot();
        BarRenderer barRenderer = (BarRenderer) plot.getRenderer();
        barRenderer.setSeriesPaint(0, new Color(61, 156, 192));
        chart.setBackgroundPaint(Color.WHITE);

        ChartPanel p = new ChartPanel(chart);
        jGraph.removeAll();
        jGraph.add(p, BorderLayout.CENTER);
        jGraph.validate();

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane JTDiscussions;
    private javax.swing.JTabbedPane MasterTab;
    private javax.swing.JButton btnAddGroup;
    private javax.swing.JButton btnAddThread;
    private javax.swing.JButton btnAgree;
    private javax.swing.JButton btnAnalyze;
    private javax.swing.JButton btnAnalyze1;
    private javax.swing.JButton btnApprove;
    private javax.swing.JButton btnComments;
    private javax.swing.JButton btnDisagree;
    private javax.swing.JButton btnJoinGroup;
    private javax.swing.JButton btnReject;
    private javax.swing.JButton btnSettings;
    private javax.swing.JButton btnViewDiscussions;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cmbGroups;
    private javax.swing.JComboBox cmbGroups1;
    private javax.swing.JComboBox cmbThreads;
    private org.jdesktop.swingx.JXDatePicker fromDate;
    private javax.swing.JPanel jGraph;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanelDashboard;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private org.jdesktop.swingx.JXSearchField jXSearchField1;
    private org.jdesktop.swingx.JXSearchField jxThreadSearch;
    private javax.swing.JLabel lblAddDrug;
    private javax.swing.JLabel lblCategory3;
    private javax.swing.JLabel lblCategory5;
    private javax.swing.JLabel lblCategory6;
    private javax.swing.JLabel lblGroupName;
    private javax.swing.JLabel lblGroupName3;
    private javax.swing.JLabel lblGroupName4;
    private javax.swing.JLabel lblGroupType;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JLabel lblQuantity1;
    private javax.swing.JLabel lblQuantity2;
    private javax.swing.JLabel lblQuantity3;
    private javax.swing.JLabel lblSearchThread;
    private javax.swing.JLabel lblSeatch;
    private javax.swing.JLabel lblSeatch1;
    private javax.swing.JRadioButton optClosed;
    private javax.swing.JRadioButton optOpen;
    private javax.swing.JTextArea taComments;
    private javax.swing.JTextArea taThreadTopic;
    private javax.swing.JTable tblDiscussion;
    private javax.swing.JTable tblGroup;
    private javax.swing.JTable tblRequests;
    private javax.swing.JTable tblThreads;
    private org.jdesktop.swingx.JXDatePicker toDate;
    private javax.swing.JTree treeGroups;
    private javax.swing.JTextField txtGroupName;
    // End of variables declaration//GEN-END:variables
}
