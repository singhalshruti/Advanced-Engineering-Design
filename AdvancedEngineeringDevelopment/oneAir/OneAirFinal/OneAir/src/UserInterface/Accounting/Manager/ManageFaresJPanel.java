/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Accounting.Manager;

import Business.Business;
import Business.Enterprise.Enterprise;
import Business.Language;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.FareRequest;
import Business.WorkQueue.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

public class ManageFaresJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    Enterprise enterprise;
    Business business;
    private UserAccount userAccount;
    private Organization organization;

    public ManageFaresJPanel(JPanel userProcessContainer, UserAccount userAccount, Organization organization, Enterprise enterprise, Business business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.organization = organization;
        this.business = business;
        this.enterprise = enterprise;
        //((PharmacySalesOrganization)organization).setDrugDirectory(new DrugDirectory());
        // loadScreen();
        populateFareRequestTable();
        populateAddFareTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAddDrug = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblFareRequests = new javax.swing.JTable();
        lblAssignedFlights = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblAddFare = new javax.swing.JTable();
        btnSave = new javax.swing.JButton();
        lblNetworkName1 = new javax.swing.JLabel();
        cmbCategory = new javax.swing.JComboBox();
        btnAssign = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        lblAddDrug.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        lblAddDrug.setText("Manage Flight Fares");

        tblFareRequests.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        tblFareRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "FlightId", "Source", "Destination", "Sender ", "Request Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblFareRequests.setSelectionBackground(new java.awt.Color(204, 204, 204));
        tblFareRequests.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane2.setViewportView(tblFareRequests);

        lblAssignedFlights.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        lblAssignedFlights.setText("Assigned Flight To Add Fares");

        tblAddFare.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        tblAddFare.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request Id", "Business Class", "Economy Class", "Comments", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblAddFare.setSelectionBackground(new java.awt.Color(204, 204, 204));
        tblAddFare.setSelectionForeground(new java.awt.Color(0, 0, 0));
        tblAddFare.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAddFareMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblAddFare);

        btnSave.setBackground(new java.awt.Color(255, 255, 255));
        btnSave.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblNetworkName1.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lblNetworkName1.setText("Category");

        cmbCategory.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        cmbCategory.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Domestic", "International", " " }));
        cmbCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCategoryActionPerformed(evt);
            }
        });

        btnAssign.setBackground(new java.awt.Color(255, 255, 255));
        btnAssign.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnAssign.setText("Assign to me");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblAddDrug)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnAssign)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 950, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblNetworkName1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cmbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 950, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblAssignedFlights))
                    .addComponent(btnSave))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAddDrug)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNetworkName1)
                    .addComponent(cmbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAssign)
                .addGap(29, 29, 29)
                .addComponent(lblAssignedFlights)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave)
                .addContainerGap(54, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        try {
            int selectedRow = tblAddFare.getSelectedRow();
            if (selectedRow >= 0) {
                float businessFare = Float.parseFloat(String.valueOf(tblAddFare.getValueAt(selectedRow, 1)));
                float economyFare = Float.parseFloat(String.valueOf(tblAddFare.getValueAt(selectedRow, 2)));
                if (businessFare <= 0 || economyFare <= 0) {
                    JOptionPane.showMessageDialog(null, "Please specify valid fare details");
                    return;
                }
                String comments = String.valueOf(tblAddFare.getValueAt(selectedRow, 3));
                FareRequest fr = (FareRequest) tblAddFare.getValueAt(selectedRow, 0);
                fr.getFlight().setBusinessPrice(businessFare);
                fr.getFlight().setEconomyPrice(economyFare);
                fr.setComments(comments);
                fr.setStatus(WorkRequest.OrderStatus.Approved.getValue());
                fr.getFlight().setFlag(Boolean.TRUE);
                JOptionPane.showMessageDialog(null, "Fare updated successfully");
                populateAddFareTable();
                populateFareRequestTable();
            } else {
                JOptionPane.showMessageDialog(null, "Please select an entry from order details section");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Language.selectEntry);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void tblAddFareMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAddFareMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_tblAddFareMouseClicked

    private void cmbCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCategoryActionPerformed
        // TODO add your handling code here:
        populateFareRequestTable();

    }//GEN-LAST:event_cmbCategoryActionPerformed

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        int selectedRow = tblFareRequests.getSelectedRow();
        if (selectedRow >= 0) {
            FareRequest fr = (FareRequest) tblFareRequests.getValueAt(selectedRow, 0);
            fr.setReceiver(userAccount);
            fr.setStatus((WorkRequest.OrderStatus.Review.getValue()));
            populateAddFareTable();
        } else {
            JOptionPane.showMessageDialog(null, "Unable to assign");
        }
    }//GEN-LAST:event_btnAssignActionPerformed

    public void populateFareRequestTable() {
        try {
            DefaultTableModel dtm = (DefaultTableModel) tblFareRequests.getModel();
            dtm.setRowCount(0);
            for (WorkRequest workRequest : organization.getWorkQueue().getWorkRequestList()) {
                if (workRequest instanceof FareRequest) {
                    if (((FareRequest) workRequest).getStatus().equalsIgnoreCase(WorkRequest.OrderStatus.Processing.getValue())) {
                        String c = ((FareRequest) workRequest).getFlight().getRouteCategory();
                        if (cmbCategory.getSelectedItem().toString().equalsIgnoreCase(c)) {
                            Object row[] = new Object[6];
                            row[0] = workRequest;
                            row[1] = ((FareRequest) workRequest).getFlight().getSource();
                            row[2] = ((FareRequest) workRequest).getFlight().getDestination();
                            row[3] = ((FareRequest) workRequest).getSender();
                            row[4] = ((FareRequest) workRequest).getRequestDate();
                            row[5] = ((FareRequest) workRequest).getComments();
                            dtm.addRow(row);
                        }
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Unable to display fare requests");
        }
    }

    public void populateAddFareTable() {
        try {
            DefaultTableModel dtm = (DefaultTableModel) tblAddFare.getModel();
            dtm.setRowCount(0);
            for (WorkRequest workRequest : organization.getWorkQueue().getWorkRequestList()) {
                if (workRequest instanceof FareRequest) {
                    if (((FareRequest) workRequest).getStatus().equalsIgnoreCase(WorkRequest.OrderStatus.Review.getValue()) && workRequest.getReceiver() == userAccount) {
                        {
                            Object row[] = new Object[6];
                            row[0] = workRequest;
                            row[1] = ((FareRequest) workRequest).getFlight().getBusinessPrice();
                            row[2] = ((FareRequest) workRequest).getFlight().getEconomyPrice();
                            row[3] = ((FareRequest) workRequest).getComments();
                            row[4] = ((FareRequest) workRequest).getStatus();
                            dtm.addRow(row);
                        }
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Unable to display order requests");
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox cmbCategory;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblAddDrug;
    private javax.swing.JLabel lblAssignedFlights;
    private javax.swing.JLabel lblNetworkName1;
    private javax.swing.JTable tblAddFare;
    private javax.swing.JTable tblFareRequests;
    // End of variables declaration//GEN-END:variables
}
