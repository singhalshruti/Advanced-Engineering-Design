/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Customer;

import Business.Business;
import Business.Customer.Customer;
import Business.Customer.CustomerBookings;
import Business.Enterprise.AirlineEnterprise;
import Business.Enterprise.CustomerEnterprise;

import Business.Enterprise.Enterprise;
import Business.Language;
import Business.Network.Network;
import Business.Organization.CustomerServiceOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.CustomerServiceRequest;
import Business.WorkQueue.WorkRequest;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

public class BookingHistoryJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private Business business;
    private UserAccount userAccount;
    private Organization organization;
    private AirlineEnterprise airlineEnterpise = null;
    private SimpleDateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
    //private Customer customer;

    public BookingHistoryJPanel(JPanel userProcessContainer, UserAccount userAccount, Organization organization, Enterprise enterprise, Business business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.organization = organization;
        this.business = business;
        this.enterprise = enterprise;
        for (Network n : business.getNetworkList()) {
            for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
                if (e instanceof AirlineEnterprise) {
                    airlineEnterpise = (AirlineEnterprise) e;
                    break;
                }
            }
        }
        loadScreen();
        populateBookingHistoryTable();
    }

    public void loadScreen() {
        lblBookingHistory.setText(Language.bookingHistory);
        lblMA.setText(Language.myBookings);
        btnCancel.setText(Language.cancelTicket);
    }

    public void populateBookingHistoryTable() {
        btnCancel.setVisible(false);
        try {
            DefaultTableModel model = (DefaultTableModel) tblBookingHistory.getModel();
            model.setRowCount(0);
            //CustomerEnterprise CE=(CustomerEnterprise)enterprise
            for (Customer customer : ((CustomerEnterprise) enterprise).getCustomerDirectory().getCustomerList()) {
                if (customer == userAccount.getCustomer()) {
                    for (CustomerBookings cb : customer.getListOfBookings()) {
                        if (((String.valueOf(cmbTickets.getSelectedItem()).equalsIgnoreCase("All"))
                                || cb.getFlight().getDate().compareTo(new Date()) > 0)
                                && (txtStatus.getText().trim().length() == 0 || cb.getStatus().toUpperCase().contains(txtStatus.getText().trim().toUpperCase()))) {
                            Object[] row = new Object[8];
                            row[0] = cb;
                            row[1] = cb.getFlight().getSource();
                            row[2] = cb.getFlight().getDestination();
                            row[3] = cb.getPrice();
                            row[4] = cb.getTraveldate();
                            row[5] = cb.getNumberOfSeats();
                            row[6] = cb.getPnr();
                            row[7] = cb.getStatus();
                            model.addRow(row);
                        }
                    }

                }
            }
            if (!String.valueOf(cmbTickets.getSelectedItem()).equalsIgnoreCase("All")) {
                btnCancel.setVisible(true);
            } else {
                btnCancel.setVisible(false);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Unable to show Booking History");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblMA = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBookingHistory = new javax.swing.JTable();
        lblBookingHistory = new javax.swing.JLabel();
        cmbTickets = new javax.swing.JComboBox();
        btnCancel = new javax.swing.JButton();
        txtStatus = new org.jdesktop.swingx.JXSearchField();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        lblMA.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        lblMA.setText("My Bookings");

        tblBookingHistory.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        tblBookingHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Booking Date", "Source", "Destination", "Payment", "Travel Date", "# Tickets", "PNR", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBookingHistory.setSelectionBackground(new java.awt.Color(204, 204, 204));
        tblBookingHistory.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(tblBookingHistory);

        lblBookingHistory.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblBookingHistory.setText("Booking History");

        cmbTickets.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All", "Upcoming Journey" }));
        cmbTickets.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbTicketsItemStateChanged(evt);
            }
        });
        cmbTickets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTicketsActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel Ticket");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        txtStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStatusActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Status");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblMA)
                .addGap(325, 880, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblBookingHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbTickets, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCancel)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblMA)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBookingHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbTickets, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(6, 6, 6)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancel)
                .addContainerGap(152, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbTicketsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTicketsActionPerformed
        // TODO add your handling code here:
        populateBookingHistoryTable();
    }//GEN-LAST:event_cmbTicketsActionPerformed

    private void cmbTicketsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbTicketsItemStateChanged
        // TODO add your handling code here:
        populateBookingHistoryTable();
    }//GEN-LAST:event_cmbTicketsItemStateChanged

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        try {
            int selectedRow = tblBookingHistory.getSelectedRow();
            if (selectedRow >= 0) {
                int dialogResult = JOptionPane.showConfirmDialog(null, Language.confirmDelete, "Warning", JOptionPane.YES_NO_OPTION);
                if (dialogResult == JOptionPane.YES_OPTION) {
                    for (Organization o : airlineEnterpise.getOrganizationDirectory().getOrganizationList()) {
                        if (o instanceof CustomerServiceOrganization) {
                            CustomerBookings cb = (CustomerBookings) tblBookingHistory.getValueAt(selectedRow, 0);
                            CustomerServiceRequest csr = new CustomerServiceRequest();
                            csr.setWorkRequestId(business.counter.getWorkRequestID());
                            csr.setRequestType(CustomerServiceRequest.CustomerServiceCategory.CancelRequest.getValue());
                            csr.setSender(userAccount);
                            csr.setCustomer(userAccount.getCustomer());
                            csr.setStatus(WorkRequest.OrderStatus.Processing.getValue());
                            csr.setCustomerbookings(cb);
                            csr.setRequestTitle(CustomerServiceRequest.CustomerServiceCategory.CancelRequest.getValue());
                            csr.setStatus(WorkRequest.OrderStatus.Processing.getValue());
                            o.getWorkQueue().getWorkRequestList().add(csr);
                            if (cb.getCategory().equalsIgnoreCase("Economy")) {
                            cb.getFlight().setEconomyCounter(cb.getFlight().getEconomyCounter() + cb.getNumberOfSeats());
                            } else {
                                cb.getFlight().setBusinessCounter(cb.getFlight().getBusinessCounter() + cb.getNumberOfSeats());
                            }

                            cb.setStatus("Cancelled");
                            JOptionPane.showMessageDialog(null, "Your cancel request has been successfully placed.");
                            populateBookingHistoryTable();
                            break;
                        }
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Your cancel request could not be placed.");
        }
    }//GEN-LAST:event_btnCancelActionPerformed

    private void txtStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStatusActionPerformed
        // TODO add your handling code here:
        populateBookingHistoryTable();
    }//GEN-LAST:event_txtStatusActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JComboBox cmbTickets;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBookingHistory;
    private javax.swing.JLabel lblMA;
    private javax.swing.JTable tblBookingHistory;
    private org.jdesktop.swingx.JXSearchField txtStatus;
    // End of variables declaration//GEN-END:variables
}
