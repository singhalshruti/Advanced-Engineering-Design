/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Customer;

import Business.Business;
import Business.Enterprise.AirlineEnterprise;
import Business.Enterprise.Enterprise;
import Business.Language;
import static Business.Language.enterprise;
import static Business.Language.organization;
import Business.Network.Network;
import Business.Organization.CustomerServiceOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.CustomerServiceRequest;
import Business.WorkQueue.WorkQueue;
import Business.WorkQueue.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rakesh
 */
public class ContactUsJPanel extends javax.swing.JPanel {

    private Enterprise enterprise;
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Organization organization;
    private Business business;
    private AirlineEnterprise airlineEnterpise = null;

    /**
     * Creates new form ContactUsJPanel
     */
    public ContactUsJPanel(JPanel userProcessContainer, UserAccount userAccount, Organization organization, Enterprise enterprise, Business business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.organization = organization;
        this.enterprise = enterprise;
        this.business = business;

        for (Network n : business.getNetworkList()) {
            for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
                if (e instanceof AirlineEnterprise) {
                    airlineEnterpise = (AirlineEnterprise) e;
                    break;
                }
            }
        }
        loadScreen();
        populateRequestTable();
    }

    private void loadScreen() {

        lblAddRequest.setText(Language.addRequest);
        lblContactUs.setText(Language.contactUs);
        lblDescription.setText(Language.description);
        lblMyRequests.setText(Language.myRequests);
        btnSaveRequest.setText(Language.save);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane7 = new javax.swing.JScrollPane();
        tblMyRequests = new javax.swing.JTable();
        btnSaveRequest = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        taRequestDescription = new javax.swing.JTextArea();
        lblDescription = new javax.swing.JLabel();
        lblAddRequest = new javax.swing.JLabel();
        lblContactUs = new javax.swing.JLabel();
        lblMyRequests = new javax.swing.JLabel();
        txtStatus = new org.jdesktop.swingx.JXSearchField();
        lblAllergyDescription1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        tblMyRequests.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        tblMyRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request Id", "Request Status", "Description", "Comments"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMyRequests.setSelectionBackground(new java.awt.Color(204, 204, 204));
        tblMyRequests.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane7.setViewportView(tblMyRequests);

        btnSaveRequest.setBackground(new java.awt.Color(255, 255, 255));
        btnSaveRequest.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnSaveRequest.setText("Save");
        btnSaveRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveRequestActionPerformed(evt);
            }
        });

        taRequestDescription.setColumns(20);
        taRequestDescription.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        taRequestDescription.setRows(5);
        jScrollPane6.setViewportView(taRequestDescription);

        lblDescription.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lblDescription.setText("Description");

        lblAddRequest.setFont(new java.awt.Font("Calibri", 2, 12)); // NOI18N
        lblAddRequest.setText("Add Request");

        lblContactUs.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        lblContactUs.setText("Contact Us");

        lblMyRequests.setFont(new java.awt.Font("Calibri", 2, 12)); // NOI18N
        lblMyRequests.setText("My Requests");

        txtStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStatusActionPerformed(evt);
            }
        });

        lblAllergyDescription1.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lblAllergyDescription1.setText("Status");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lblContactUs, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAddRequest, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMyRequests, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnSaveRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblDescription)
                                .addComponent(lblAllergyDescription1, javax.swing.GroupLayout.Alignment.LEADING))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblContactUs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblAddRequest)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDescription)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSaveRequest)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMyRequests)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAllergyDescription1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(122, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveRequestActionPerformed
        // TODO add your handling code here:
        try {

            String description = taRequestDescription.getText().trim();
            if (!taRequestDescription.getText().isEmpty()) {
                CustomerServiceRequest csr = new CustomerServiceRequest();
                for (Organization o : airlineEnterpise.getOrganizationDirectory().getOrganizationList()) {
                    if (o instanceof CustomerServiceOrganization) {
                        o.getWorkQueue().getWorkRequestList().add(csr);
                        csr.setSender(userAccount);
                        csr.setStatus(WorkRequest.OrderStatus.Processing.getValue());
                        csr.setRequest(description);
                        csr.setWorkRequestId(business.counter.getWorkRequestID());
                        csr.setRequestType(CustomerServiceRequest.CustomerServiceCategory.OtherRequests.getValue());
                        JOptionPane.showMessageDialog(null, "Your request has been palced successfully");
                        taRequestDescription.setText("");
                        populateRequestTable();
                        break;
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, Language.validDetails);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Language.validDetails);
        }
    }//GEN-LAST:event_btnSaveRequestActionPerformed

    private void txtStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStatusActionPerformed
        // TODO add your handling code here:
        populateRequestTable();
    }//GEN-LAST:event_txtStatusActionPerformed

    public void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel) tblMyRequests.getModel();
        model.setRowCount(0);
        try {
            for (Organization o : airlineEnterpise.getOrganizationDirectory().getOrganizationList()) {
                if (o instanceof CustomerServiceOrganization) {
                    for (WorkRequest wr : o.getWorkQueue().getWorkRequestList()) {
                        if (wr instanceof CustomerServiceRequest && wr.getSender() == userAccount) {
                            if (wr.getRequestType().equalsIgnoreCase(CustomerServiceRequest.CustomerServiceCategory.OtherRequests.getValue())
                                    && (txtStatus.getText().trim().length() == 0 || wr.getStatus().toUpperCase().contains(txtStatus.getText().trim().toUpperCase()))) {
                                Object[] row = new Object[4];
                                row[0] = wr;
                                row[1] = wr.getStatus();
                                row[2] = ((CustomerServiceRequest) wr).getRequest();
                                row[3] = wr.getComments();
                                model.addRow(row);
                            }
                        }
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Language.fail);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSaveRequest;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JLabel lblAddRequest;
    private javax.swing.JLabel lblAllergyDescription1;
    private javax.swing.JLabel lblContactUs;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblMyRequests;
    private javax.swing.JTextArea taRequestDescription;
    private javax.swing.JTable tblMyRequests;
    private org.jdesktop.swingx.JXSearchField txtStatus;
    // End of variables declaration//GEN-END:variables
}
